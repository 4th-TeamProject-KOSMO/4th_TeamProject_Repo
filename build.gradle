plugins {
	id 'java'
	id 'war'
	id 'org.springframework.boot' version '3.4.8-SNAPSHOT'
	id 'io.spring.dependency-management' version '1.1.7'
	id 'eclipse-wtp'
}

// Q-Class 파일을 제대로 생성하도록 QueryDSL 설정 추가
def generated = 'src/main/generated'

sourceSets {
    main {
        java {
            srcDirs += [ generated ]
        }
    }
}
// 컴파일 시 generated 폴더에 Q클래스 생성
tasks.withType(JavaCompile) {
    options.generatedSourceOutputDirectory = file(generated)
}
// clean 시 generated 폴더 삭제
clean {
    delete file(generated)
}


group = 'com.edu'
version = '0.0.1-SNAPSHOT'

java {
	toolchain {
		languageVersion = JavaLanguageVersion.of(21)
	}
}

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
	maven { url = 'https://repo.spring.io/snapshot' }
}

//다이나믹 웹 모듈 설정
eclipse.wtp.facet {
    // Change the version of the Dynamic Web Module facet
    facet name: 'jst.web', version: '5.0'
}

dependencies {
	// 데이터 유효성 검사
	implementation 'org.springframework.boot:spring-boot-starter-validation'
	// Spring Data JPA 의존성 추가
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	//시큐리티 추가
	implementation 'org.springframework.boot:spring-boot-starter-security'
	implementation 'org.springframework.security:spring-security-taglibs'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	compileOnly 'org.projectlombok:lombok'
	annotationProcessor 'org.projectlombok:lombok'
	providedRuntime 'org.springframework.boot:spring-boot-starter-tomcat'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
	developmentOnly 'org.springframework.boot:spring-boot-devtools'
	
	// JSP 사용을 위한 의존성 추가
	implementation 'jakarta.servlet:jakarta.servlet-api'
	implementation 'jakarta.servlet.jsp.jstl:jakarta.servlet.jsp.jstl-api'
	implementation 'org.glassfish.web:jakarta.servlet.jsp.jstl'
	implementation 'org.apache.tomcat.embed:tomcat-embed-jasper'
	
	// JDBC설정
	implementation 'org.springframework.boot:spring-boot-starter-jdbc'
	implementation 'org.mybatis.spring.boot:mybatis-spring-boot-starter:3.0.4'
	runtimeOnly 'com.oracle.database.jdbc:ojdbc11'
	testImplementation 'org.mybatis.spring.boot:mybatis-spring-boot-starter-test:3.0.4'	
	
	// Mybatis의 쿼리문 출력을 위한 의존성 추가
	implementation 'org.bgee.log4jdbc-log4j2:log4jdbc-log4j2-jdbc4.1:1.16'
	
	//Jackson 라이브러리
	implementation 'com.fasterxml.jackson.core:jackson-databind'
	
	implementation 'org.json:json:20240303'
	
    //WebSocket을 사용하여 실시간 양방향 통신을 구현하기 위한 의존성
	implementation group: 'org.springframework.boot', name: 'spring-boot-starter-websocket', version: '3.3.1'

	// mustache 탬플릿을 위한 의존
	implementation 'org.springframework.boot:spring-boot-starter-mustache'
	
	//JWT 토큰 의존성
    implementation 'io.jsonwebtoken:jjwt-api:0.11.5' // JWT 핵심 API
    runtimeOnly 'io.jsonwebtoken:jjwt-impl:0.11.5' // JWT 내부 구현체
    runtimeOnly 'io.jsonwebtoken:jjwt-jackson:0.11.5' // JWT JSON 파싱용 (jackson 기반)
    
	// QueryDSL 사용을 위한 의존성 추가
    implementation 'com.querydsl:querydsl-jpa:5.0.0:jakarta'
    // QueryDSL APT (JPA용, Q클래스 생성)
    annotationProcessor "com.querydsl:querydsl-apt:5.0.0:jakarta"
    annotationProcessor 'jakarta.annotation:jakarta.annotation-api'
    annotationProcessor 'jakarta.persistence:jakarta.persistence-api'
}

tasks.named('test') {
	useJUnitPlatform()
}
